<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j4z6OZxMX0+/TB+k6kWUJGkJGfXCeemm9GqqXjRJkpaYUf+YG5IhlySttelH/YtpXFqvXhxJktbUlKM+
        3if/p/ROql4USZLW2FSj/vn0n6l6ISRJWntTjPpX0x9T9QJIktSl1qN+S3ovVb+4JEndajnq/5o82U2S
        NFutRv3+VP2SkiTNUItR/2GqfjlJkmbqhTS+lW+V7k7VLyVJ0oyNT3iNp6KuyneS98wlSfpkj6bVuDp5
        YIwkSXXjwWqLd2EaX/Rf/QKSJOkv3yR6bVq0J1J18JIk6f97M42T4EUa75tXBy1Jkj7dw2lxLkoe6SpJ
        0sH7MF2TFuWhVB2sJEk6e8+kxbgqjTf4qwOVJElnb3zEe3xx2SI8naqDlCRJ5248Re5k2quvJA+QkSTp
        eN2U9urnqTowSZJ08MbH2M5Pe/GF5L1zSZI2061pL+5L1QFJkqTD919p58ab92+l6oAkSdLhG/ekXZZ2
        6nSqDkaSJB29O9NOeZCMJEmbb3wUfKd+l6oDkSRJR+/tdCrtxJXJZ88lSdpO30w7Ma7vVwcgSZKO32Np
        Jx5P1QFIkqTjNz5FtpNHwb6aqgOQJEmb6dK0VeOxdO+m6odLkqTN9PW0VZen6gdLkqTN9f20Vf+Yqh8s
        SZI214/TVo0Hx1c/WJIkba6fpa3651T9YEmStLmeTVv1w1T9YEmStLleTFv1QKp+sCRJ2lyvpa36Sap+
        sCRJ2lxbH3Rn6JIkbb+tD7r30CVJ2n5bfw/dXe6SJG2/rd/l7nPokiRtv61/Dt2T4iRJ2n5bf1KcZ7lL
        krT9vpe2anzb2jup+uGSJGkzbf3b1oZXUvXDJUnSZrokbd1jqfrhkiTp+P0+nUxbd0eqDkCSJB2/R9NO
        XJHOpOogJEnS8boh7cybqToISZJ09P6Uxg3oO/Ngqg5EkiQdvafSTl2fqgORJElH7/a0U+Puu9+l6mAk
        SdLh+zDt5ONqf+/eVB2QJEk6fL9Oe3FZej9VByVJkg7XzWlvnkzVQUmSpIP3Rjov7c3VyWfSJUk6Xt9J
        ezdusa8OTpIknbvn0iJcmbyXLknS4RtXua9Ji/GTVB2oJEk6e79Ii/K59IdUHawkSfp043Pn4160xflW
        coOcJEkHazxGfbF8V7okSefuN+mCtFjj4MZBVgcvSZJOnHgvfSUt3pfS26n6JSRJmr070mqM99PHm/3V
        LyJJ0qw9lFbne8lNcpIk/aXxEbW9Pt71OO5J1S8lSdJMjafBnUqr5mtWJUkzN74W9cLUwt3Je+qSpNlq
        NeYfuTG9m6pfWJKkbrUc84+MB9D/PlW/uCRJXWo95h+5OD2dqhdAkqS1N8WYf+RkGh+s/59UvRiSJK2x
        qcb84y5LTyWfV5ckrb1px/zjTqeXUvUCSZK09Iz5x4zL8N9OL6bqxZIkaYkZ88/wtTQuxb+fqhdPkqQl
        ZMwPaNwRP54J/3z6IFUvpiRJ+8iYH9EY95vSI+n1ZOAlSfvKmG/QeCGvS7el+9Lj6ZfphfRKek2Sdtib
        qfrDr34Zc4Cmxh/38Ue++uOvXhlzgKaM+TwZc4CmjPk8GXOApoz5PBlzgKaM+TwZc4CmjPk8GXOApoz5
        PBlzgKaM+TwZc4CmjPk8GXOApoz5PBlzgKaM+TwZc4CmjPk8GXOApoz5PBlzgKaM+TwZc4CmjPk8GXOA
        poz5PBlzgKaM+TwZc4CmjPk8GXOApoz5PBlzgKaM+TwZc4CmjPk8GXOApoz5PBlzgKaM+TwZc4CmjPk8
        GXOApoz5PBlzgKaM+TwZc4CmjPk8GXOApoz5PBlzgKaM+TwZc4CmjPk8GXOApoz5PBlzgKaM+TwZc4Cm
        jPk8GXOApoz5PBlzgKaM+TwZc4CmjPk8GXOApoz5PBlzgKaM+Tz9Kl2QAGjGmM+TMQdoypjPkzEHaMqY
        z5MxB2jKmM+TMQdoaoz586n6469eGXOAppyZz5MxB2jKmM+TMQdoypjPkzEHaMqYz5MxB2jKmM+TMQdo
        ypjPkzEHaMqYz5MxB2jKmM+TMQdoypjPkzEHaMqYz5MxB2jKmM+TMQdoypjPkzEHaMqYz5MxB2hqjLlv
        TZsjYw7QlDPzeTLmAE0Z83ky5gBNucw+T8YcoCln5vNkzAGaMubzZMwBmnKZfZ6MOUBT44+7M/M5MuYA
        TZ2fnk3VH3/1ypgDNHUyPZWqP/7qlTEHaOyBVP3xV6+MOUBjt6QzqRoA9cmYAzR2VXo3VQOgPhlzgMbG
        TXCvpGoA1CdjDtDc/akaAPXJmAM09+X0QapGQD0y5gATeC5VI6AeGXOACXw7VSOgHhlzgAmcl15P1RBo
        /RlzgEncmKoh0Poz5gATeTlVY6B1Z8wBJvK1VI2B1p0xB5jMk6kaBK03Yw4wmQuTR7z2ypgDTOjWVI2C
        1pkxB5jUL1I1DFpfxhxgUqfS26kaB60rYw4wsdOpGgetK2MOMLl7UzUQWk/GHIATz6RqJLSOjDkAJ06m
        P6ZqKLT8jDkAf3ZROpOqsdCyM+YA/M11qRoLLTtjDsAn+Ha19WXMAfiUu1M1GlpmxhyA0n2pGg4tL2MO
        wFk9mKrx0LIy5gB8podTNSBaTsYcgHN6NFUjomVkzAE4kJ+maki0/4w5AAf2QKrGRPvNmANwKPekalC0
        v4w5AId2Z6pGRfvJmANwJN9I1bBo9xlzAI7sylSNi3abMQfgWM5P76VqZLSbjDkAG/FqqoZG28+YA7Ax
        j6VqbLTdjDkAG3V7qgZH28uYA7Bxl6czqRoebT5jDsDWvJGq8dFmM+YAbJVHwG4/Yw7A1l2bqhHSZjLm
        AOyMy+7byZgDsFM/SNUg6egZcwB27vPp3VQNkw6fMQdgbx5J1TjpcBlzAPbqivRBqkZKB8uYA7AIj6Zq
        qHTujDkAi3FpeidVg6WzZ8wBWJx7UjVaqjPmACzS+J7011M1XvpkxhyARftqcoPcZ2fMAViF+1I1ZDLm
        AKzIeen5VA3azBlzAFbnkvRWqoZtxow5AKt1TfJRNmMOQAM3pJlvkjPmALRxY5px1I05AO3MNurPJmMO
        QEvj8vsM76k/lcZDdgCgrXGj3B9SNYRr70z6UTqZAKC98ZG2bp9TfzfdnABgKuMsdjxRrsP76q+kqxIA
        TGs8+32tX+jyfhr/KfF+OQDEGMTx1atrumHuufTlBAD8nUvTo2nJl+HH1YRvJwDgHC5Pj6Rxo1k1qvvo
        5XRTGl88AwAcwsXpB+mNVI3sthv/oXgyfS0BABtwbXogjXEfn/euBngTvZ2eTremCxMAsCVfTLelx9Kr
        6b1UjfO5Gv8xGA+5eSbdm06nUwkA2INxl/wVaTxa9o407pgfZ/M/TQ//tQfT+IjZ99N4rvx16aLkqW4A
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwRydO/B/3E8KKmxr9iQAAAABJRU5ErkJggg==
</value>
  </data>
</root>